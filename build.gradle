plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

group = 'ch.bbw.m151'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'com.h2database:h2'
}

tasks.create('dockerPostgresCleanup', Exec) {
	commandLine 'docker kill postgres-jokesdb'.split(' ')
	ignoreExitValue true
}

tasks.create('dockerPostgres', Exec) {
	dependsOn dockerPostgresCleanup
	commandLine 'docker run --rm --name postgres-jokesdb -p 5432:5432 -d -e POSTGRES_USER=localuser -e POSTGRES_PASSWORD=localpass -e POSTGRES_DB=localdb postgres:14.5'.split(' ')
}

bootRun {
	dependsOn dockerPostgres
}

tasks.named('test') {
	useJUnitPlatform()
}
